image: 'node:14'

pipelines:
    default:
        - step:
              name: Run test
              deployment: test
              script:
                  - npm install
                  - npm run build
                  - npm run migration:run
                  - npm run test:silent
              services:
                  - postgres
    branches:
        dev:
            - step:
                  deployment: develop
                  name: Deploy to development and test
                  script:
                      - apt-get update && apt-get install -y jq
                      - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
                      - unzip awscli-bundle.zip
                      - ./awscli-bundle/install -b ~/bin/aws
                      - export PATH=~/bin:$PATH
                      - curl -L https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip -o aws-sam-cli-linux-x86_64.zip
                      - unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
                      - ./sam-installation/install
                      - npm install -g aws-cdk
                      - npm install
                      - aws configure set aws_access_key_id "${AWS_ACCESS_KEY_ID}"
                      - aws configure set aws_secret_access_key "${AWS_SECRET_ACCESS_KEY}"
                      - aws configure set default.region "${AWS_DEFAULT_REGION}"
                      - make
                  services:
                      - docker
                  caches:
                      - pip
definitions:
    services:
        postgres:
            image: postgres
            variables:
                POSTGRES_USER: $DB_USER
                POSTGRES_PASSWORD: $DB_PASSWORD
                POSTGRES_DB: $DB_DATABASE_NAME
                POSTGRES_INITDB_ARGS: '--encoding=UTF-8'
